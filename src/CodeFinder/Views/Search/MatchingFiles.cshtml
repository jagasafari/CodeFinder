@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization
@if (Model.FirstFileContent == null)
{
    <strong>Not found!</strong>
}
else
{
    <div id="parent">
        <br />
        <br />
        <h2>
            Total number of files: <span data-bind="text: codeFiles().length"></span>
            out of <span data-bind="text: names().length"></span>
        </h2>
        <button id="moreCode" data-bind="click: GetNextFile" class="pull-right">Get More Code</button>
        <div data-bind="foreach: codeFiles"><p >
            <strong class="fileFullPath" data-bind="text: filePath"></strong></p>
            <div data-bind="foreach: fileLines">
                <pre class="codeStyle" data-bind="text: $data">
            </pre>
                <br/>
            </div>
            <hr/>
        </div>
    </div>
}
@section scripts
{
    <script type="text/javascript">

        $(function() {
            function fileCode(firstFileLines, path) {
                var self = this;
                self.fileLines = ko.observableArray(firstFileLines);
                self.filePath = ko.observable(path);
            }

            function viewModel() {
                var self = this;
                self.names = ko.observableArray(@Json.Serialize(Model.MachingFiles));
                self.nextFile = 0;
                self.codeFiles = ko.observableArray([
                    new fileCode(@Json.Serialize(Model.FirstFileContent),
                        self.names()[self.nextFile])
                ]);
                self.matchingKeywords = ko.observableArray(@Json.Serialize(Model.Keywords));
                self.GetNextFile = function() {
                    if (@Json.Serialize(Model.NextFile) < self.names().length) {
                        var requestUrl = "http://localhost:5000/Search/FileCode?path=".concat(this.names()[++self.nextFile]);
                        $.getJSON(requestUrl, function(fileLines) {
                            self.codeFiles.push(new fileCode(fileLines, self.names()[self.nextFile]));
                        });
                    }
                }
            }

            var vm = new viewModel();
            ko.applyBindings(vm);
            $("body").on('keydown', function() { $('#moreCode').click(); });
        });
    </script>
}